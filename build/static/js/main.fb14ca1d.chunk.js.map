{"version":3,"sources":["config/firebase.ts","contexts/auth.context.tsx","assets/images/auth.svg","config/chatEngine.ts","services/auth.service.ts","pages/Login.tsx","pages/Chat.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","createContext","useAuth","useContext","AuthProvider","children","history","useHistory","useState","setLoading","user","setUser","useEffect","onAuthStateChanged","push","value","Provider","chatConfig","getUser","username","userId","a","headers","Axios","get","data","console","log","error","message","createUser","userData","newUser","post","Login","loginUser","signInWithRedirect","GoogleAuthProvider","className","src","width","alt","onClick","GoogleOutlined","Chat","email","uid","formData","FormData","append","photoURL","getFile","file","name","initUser","handleLogOut","signOut","url","fetch","response","blob","File","type","height","publicKey","userName","userSecret","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb14ca1d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport const auth = firebase.initializeApp({\n    apiKey: \"AIzaSyCQnJyL7o2RPvpQrOAodamnTaR6waJsyKY\",\n    authDomain: \"react-chatengine.firebaseapp.com\",\n    projectId: \"react-chatengine\",\n    storageBucket: \"react-chatengine.appspot.com\",\n    messagingSenderId: \"722981729499\",\n    appId: \"1:722981729499:web:0ec33813aea85e373048fe\"\n  }).auth();","import { useEffect, useState, useContext, createContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { auth } from \"../config/firebase\";\nimport firebase from \"firebase/app\";\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => useContext(AuthContext);\nexport const AuthProvider = ({ children }: any) => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<null | firebase.User>(null);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      setUser(user);\n      setLoading(false);\n      if(user) history.push('/chat');\n    });\n  }, [user, history]);\n\n  const value: any = { user };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n","export default __webpack_public_path__ + \"static/media/auth.bf18cbdb.svg\";","export const chatConfig =\n{\n    projectId: \"9b2e9ebf-1580-452b-b6f7-fe0c2dbb2593\",\n    private: \"81f7c939-55f0-4fe9-b679-fb9a57c5ed6d\",\n    baseUrl:'https://api.chatengine.io',\n\n\n}","import firebase from 'firebase/app';\nimport { auth } from \"../config/firebase\";\nimport Axios from 'axios';\nimport { chatConfig } from \"../config/chatEngine\";\n\nexport const googleLogin = () => {\n   return auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider())\n}\nexport const getUser = async (username: string, userId: string) => {\n    const headers = {\n        \"Project-ID\": chatConfig.projectId,\n        \"User-Name\": username,\n        \"User-Secret\": userId\n    }\n    try {\n        const data = await Axios.get(`${chatConfig.baseUrl}/users/me`, {\n            headers: { ...headers }\n        });\n        console.log(data);\n        return data;\n\n    } catch (error) {\n        return { error: error.message };\n    }\n\n}\n\nexport const createUser = async (userData: FormData) => {\n    const headers = {\n        \"private-key\": chatConfig.private,\n    }\n    try {\n        const newUser = Axios.post(`${chatConfig.baseUrl}/users/`, userData, {\n            headers: { ...headers }\n        });\n        return newUser\n    } catch (error) {\n        return { error: error.message };\n    }\n}","\nimport { GoogleOutlined } from \"@ant-design/icons\";\nimport { auth } from \"../assets/images/index\";\nimport { googleLogin } from \"../services/auth.service\";\nimport { useAuth } from \"../contexts/auth.context\";\n\nconst Login = () => {\n  const { user }: any = useAuth();\n\n  const loginUser = async () => await googleLogin();\n\n  return (\n    <div className=\"h-screen flex items-center flex-wrap justify-items-center w-screen\">\n      <div className=\"w-1/2 text-center\">\n        <img src={auth} width=\"500\" alt=\"\" className=\"mx-auto\" />\n        <h1 className=\"font-bold text-5xl mt-10\">Welcome to My Chat</h1>\n      </div>\n      <div className=\"w-1/2 px-20 bg-red-600 h-full flex  items-center justify-items-center\">\n        <div className=\"flex flex-col items-center justify-items-center w-full  py-40 \">\n          <div\n            onClick={() => loginUser()}\n            className=\"bg-white p-5 rounded-lg flex items-center w-full text-center justify-center cursor-pointer hover:bg-red-200\"\n          >\n            <GoogleOutlined></GoogleOutlined>{\" \"}\n            <span className=\"ml-5\">Sign In with google</span>\n          </div>\n          {user && (\n            <div className=\"mt-3 w-full\">\n              <div className=\"inline-flex w-full items-center bg-white leading-none text-green-600 rounded-full p-2 shadow text-teal text-sm\">\n                <span className=\"inline-flex bg-green-600 text-white rounded-full h-6 px-3 justify-center items-center\">\n                  Success\n                </span>\n                <span className=\"inline-flex px-2\">Login Successfull </span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useRef, useEffect, useState } from \"react\";\n// @ts-ignore\nimport { ChatEngine } from \"react-chat-engine\";\nimport { auth } from \"../config/firebase\";\nimport { chatConfig } from \"../config/chatEngine\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/auth.context\";\nimport { createUser, getUser, googleLogin } from \"../services/auth.service\";\n\nconst Chat = () => {\n  const history = useHistory();\n  const { user }: any = useAuth();\n  console.log(user);\n\n  useEffect(() => {\n    async function initUser() {\n      if (!user) return history.push(\"/\");\n      const data: any = await getUser(user.email, user.uid);\n      if (data.error) {\n        let formData = new FormData();\n        formData.append(\"email\", user.email);\n        formData.append(\"username\", user.email);\n        formData.append(\"secret\", user.uid);\n        if (user.photoURL) {\n          const file = await getFile(user.photoURL);\n          formData.append(\"avatar\", file, file.name);\n        }\n        const userData = await createUser(formData);\n      }\n    }\n\n    initUser();\n    return () => {\n        \n    };\n  }, []);\n  const handleLogOut = async () => {\n    await auth.signOut();\n    history.push(\"/\");\n  };\n  const getFile = async (url: string) => {\n    const response = await fetch(url);\n    const data = await response.blob();\n    return new File([data], \"userPhoto.png\", { type: \"image/png\" });\n  };\n  if (!user) return <div>Loading...</div>;\n  return (\n    <div>\n      <div className=\"flex bg-red-600 px-5 py-4 justify-between\">\n        <span className=\"text-xl text-white font-bold\">Chats</span>{\" \"}\n        <span\n          className=\"cursor-pointer text-white font-bold\"\n          onClick={() => handleLogOut()}\n        >\n          Logout\n        </span>\n      </div>\n      <div className=\"font-sans\">\n        <ChatEngine\n          height=\"calc(100vh - 60px )\"\n          publicKey={chatConfig.projectId}\n          userName={user.email}\n          userSecret={user.uid}\n        ></ChatEngine>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AuthProvider } from \"./contexts/auth.context\";\nimport \"./assets/css/main.css\";\nimport Login from \"./pages/Login\";\nimport Chat from \"./pages/Chat\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/chat\" component={Chat} />\n            <Route path=\"/\" component={Login} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}